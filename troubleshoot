Networking s Security Scenarios 
======================
1. A website running on your Linux server is inaccessible, but the server is up. How do you troubleshoot?

We first check if the web server (Apache/Nginx) is running using systemctl status.
Then we verify the firewall rules and use netstat -tuln or ss -tuln to confirm the port is open.
Finally, we check the server logs (/var/log/) and try curl localhost for local accessibility.

2. You need to allow only a specific IP to access a server over SSH. How would you configure it?

We edit the SSH configuration file /etc/ssh/sshd_config and use AllowUsers or Match blocks.
Alternatively, we use firewall rules: iptables -A INPUT -p tcp -s <IP> --dport 22 -j ACCEPT.
Donâ€™t forget to restart sshd after changes.

3. Your server is under a DDoS attack. How do you mitigate it using Linux commands?

We can use netstat or ss to identify unusual connections.
Then, we use iptables or firewalld to block IPs or rate-limit traffic.
Installing tools like fail2ban or ufw can help with automated blocking.

4. You need to check which ports are open and which services are listening. How do you do that?

We use ss -tuln or netstat -tuln to view listening ports.
To map services with PIDs, we use ss -tulnp or lsof -i.
This helps identify unauthorized or unexpected services.

5. A user is unable to reach an external website from a Linux server. How do you troubleshoot network connectivity?

We first check basic connectivity with ping or curl.
Then we verify DNS resolution using dig or nslookup.
If needed, we check routes with ip route and firewall settings with iptables or ufw.

6. You need to set up a firewall to allow only HTTP, HTTPS, and SSH traffic. How do you do it?

Using ufw, we run:
ufw allow 22 
ufw allow 80 
ufw allow 443 
ufw enable 
For iptables, we allow specific ports and drop the rest.

7. How do you check which process is using a specific port?

We use lsof -i :<port> or ss -tulnp | grep <port> to find the PID and program.
It tells us which service is bound to the port.
This is useful for troubleshooting conflicts or security risks.

8. A connection to a database is failing from your Linux server. How do you troubleshoot it?

We first check connectivity with telnet <host> <port> or nc.
Then we confirm the database service is up and accepting connections.
Firewall, SELinux, or bind-address misconfigurations can also block access.

9. You need to change the default SSH port for security reasons. How do you do it?

We edit /etc/ssh/sshd_config and change the Port directive to a new number.
Then, we allow the new port in the firewall and restart the SSH service.
Itâ€™s good practice to inform users and test before closing the old port.

10. How do you enable IP forwarding on a Linux system?

We temporarily enable it with:
echo 1 > /proc/sys/net/ipv4/ip_forward 
For a permanent setup, we edit /etc/sysctl.conf and set net.ipv4.ip_forward = 1, then run sysctl -p.

---------------------------------------------------------------------------------------------------------

when Internet access is not working , check /etc/resolve.conf > nameserver , 
Also check ifconfig > for eth0 end point . 
check /etc/network/interface > file and make sure eth0 are same 

> If repo is not able to update or package not found 
check /etc/apt/source.list > and need to add package according to the OS LIKE for Ubuntu add ".deb" package repo 

--------------------------------------------------------------------------------------------------------------------------------------------

******Linux Troubleshooting Cheatsheet****** 

1. How to Check Disk Space Usage
Answer: 
Use df -h to view disk usage by mounted filesystems. For directory-level details, run du -sh /path/to/directory. Clean up old logs, unused packages, or large files with tools like ncdu for interactive analysis.

2. Service Fails to Start
Answer: 
Check status with systemctl status service-name. View logs via journalctl -u service-name --since "10 minutes ago". Ensure dependencies are installed and configuration files (e.g., /etc/service-name/config.conf) are correct.

3. Network Connectivity Issues
Answer:
- Test connectivity: ping 8.8.8.8 (Google DNS). 
- Check routes: ip route or traceroute google.com. 
- Verify DNS: dig google.com or nslookup google.com. 
- Inspect interfaces: ip a or ifconfig. Restart networking with systemctl restart NetworkManager (or networkd).

4. "Permission Denied" Errors
Answer: 
- Check permissions: ls -l /path/to/file. 
- Modify permissions: chmod 755 file or chown user:group file. 
- If SELinux/AppArmor blocks access, check logs (/var/log/audit/audit.log) or temporarily disable with setenforce 0.

5. Terminating Unresponsive Processes
Answer: 
- Find PID: ps aux | grep process-name or top. 
- Kill process: kill -9 PID or pkill process-name. 
- Force-kill all instances: killall -9 process-name.

6. System Fails to Boot
Answer:
- Boot into recovery mode (GRUB menu) and check logs (/var/log/boot.log or journalctl -b). 
- Repair filesystems: fsck /dev/sdX. 
- Reinstall bootloader (GRUB): grub-install /dev/sdX.

7. "No Space Left on Device" Despite Free Space
Answer: 
- Check inode usage: df -i. 
- Delete small, numerous files (e.g., temporary files) to free inodes.

8. DNS Resolution Failures
Answer: 
- Verify DNS config: cat /etc/resolv.conf. 
- Test DNS server: dig @8.8.8.8 google.com. 
- Restart DNS resolver: systemctl restart systemd-resolved.

9. High CPU/Memory Usage
Answer: 
- Identify resource hogs: top, htop, or vmstat 2. 
- Kill problematic processes or optimize applications. Check for memory leaks with free -h.

10. SSH Connection Refused
Answer:
- Ensure SSH service runs: systemctl status sshd. 
- Check firewall rules: ufw status or iptables -L. 
- Verify SSH port (default: 22) is open and accessible.

 11.Filesystem Corruption
Answer:
- Unmount the disk: umount /dev/sdX. 
- Run fsck /dev/sdX to repair. Backup critical data first. For root FS, boot from a live USB.

12. Cron Jobs Not Executing
Answer: 
- Check cron logs: grep CRON /var/log/syslog. 
- Ensure the cron service is running: systemctl status cron. 
- Validate syntax and user permissions in /etc/crontab or user crontabs (crontab -e).

-----------------------------------------------------Hyenoon Server --------------------------------------------------------------------------------

#SVN BACKUPS
0 2 * * * rsync -avz -e "ssh -p 9011" usman@168.235.66.135:/var/svn /home/hyenoon/backup/svn/ >> /home/hyenoon/backup/svn/rsync.log 2>&0



#GITEA BACKUPS SCRIPT
0 2 * * * /home/git/gitea_backups/backup_gitea_weekly.sh >> /home/git/gitea_backups/gitea-weekly-backup.log 2>&1

----------------------------------------------------------------------------------------------------------------------------------------------

Quick Linux Trick:
Server load so high you canâ€™t even SSH in?

ðŸ‘‰ Use this command;

ssh -o ConnectTimeout=1 -o ConnectionAttempts=1 user@host "nice -n -20 bash"







